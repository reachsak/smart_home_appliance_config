import { Color } from "./color";
import { SceneType, StartFlowAction } from "./enums";
import { FlowState } from "./flow-state";
export declare class Scene {
    type: SceneType;
    constructor(type: SceneType);
    getData(): any[];
}
export declare class ColorScene extends Scene {
    color: Color;
    bright: number;
    constructor(color: Color, bright: number);
    getData(): (number | SceneType)[];
}
export declare class HsvScene extends Scene {
    hue: number;
    satuation: number;
    brightness: number;
    constructor(hue: number, satuation: number, brightness: number);
    getData(): (number | SceneType)[];
}
/**
 * change the smart LED to specified ct and brightness
 */
export declare class CtScene extends Scene {
    temperature: number;
    brightness: number;
    /**
     * @constructor
     * @param temperature : K temperature value
     * @param brightness  max brightness level
     */
    constructor(temperature: number, brightness: number);
    getData(): (number | SceneType)[];
}
export declare class CfScene extends Scene {
    flowAction: StartFlowAction;
    states: FlowState[];
    repeat: number;
    /**
     * @constructor
     * @param flowAction The LED behavior after flow finish
     * @param states : The set of state changes
     * @param repeat : number of repeas. 0 is infinity
     */
    constructor(flowAction: StartFlowAction, states: FlowState[], repeat: number);
    getData(): (string | number)[];
}
